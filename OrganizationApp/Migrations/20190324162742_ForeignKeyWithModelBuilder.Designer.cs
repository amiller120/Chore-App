// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrganizationApp.Data;

namespace OrganizationApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190324162742_ForeignKeyWithModelBuilder")]
    partial class ForeignKeyWithModelBuilder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OrganizationApp.Models.AssignedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AssignedPerson");
                });

            modelBuilder.Entity("OrganizationApp.Models.ChoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AssignedToId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsComplete");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.ToTable("choreItems");
                });

            modelBuilder.Entity("OrganizationApp.Models.ChoreItem", b =>
                {
                    b.HasOne("OrganizationApp.Models.AssignedPerson", "AssignedTo")
                        .WithMany("Chores")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
